{"version":3,"sources":["skylark-flipster.js"],"names":["define","$","throttle","func","delay","timer","context","this","args","arguments","setTimeout","apply","support","checkStyleSupport","prop","undefined","div","document","createElement","style","ucProp","charAt","toUpperCase","slice","props","join","split","i","svgNS","svgSupport","innerHTML","firstChild","namespaceURI","$window","window","transformSupport","defaults","itemContainer","itemSelector","start","fadeIn","loop","autoplay","pauseOnHover","spacing","click","keyboard","scrollwheel","touch","nav","buttons","buttonPrev","buttonNext","onItemSwitch","classes","main","active","container","navChild","navItem","navLink","navCurrent","navCategory","navCategoryLink","button","item","itemCurrent","itemPast","itemFuture","itemContent","classRemover","RegExp","whiteSpaceRemover","fn","flipster","options","isMethodCall","Array","prototype","call","each","methods","data","settings","extend","_container","_containerWidth","_resizeInterval","_items","_currentItem","_nav","_navItems","_navLinks","self","_itemOffsets","_currentIndex","_playing","_startDrag","buildButton","dir","html","text","buildButtonContent","on","e","jump","preventDefault","resetTransition","css","resize","skipTransition","itemHeight","biggestHeight","width","height","clearInterval","left","attr","c","replace","outerWidth","position","length","center","setInterval","newClass","zIndex","total","category","removeClass","filter","parent","addClass","updateNav","to","_previous","index","eq","play","interval","prev","stop","pause","forced","show","hide","find","children","wrapInner","hasClass","remove","append","navCategories","itemTitle","add","categoryItem","categoryLink","appendTo","wrap","prepend","buildNav","next","Math","floor","images","imagesLoaded","elem","tabIndex","code","which","_dir","_lastDir","_wheelInside","_actionThrottle","_throttleTimeout","_delta","_isMozilla","test","navigator","userAgent","toLowerCase","clearTimeout","originalEvent","wheelDelta","deltaY","deltaX","abs","wheelEvents","_startDragX","_startDragY","x","y","offsetY","offsetX","touchstart.flipster","touches","clientX","clientY","touchmove.flipster","touchend.flipster touchcancel.flipster ","touchEvents","init"],"mappings":"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","file":"../skylark-flipster.js","sourcesContent":["define('skylark-flipster/flipster',[\n    \"skylark-jquery\"\n],function($) {\n\n\n    'use strict';\n\n    function throttle(func, delay) {\n        var timer = null;\n\n        return function() {\n            var context = this,\n                args = arguments;\n\n            if ( timer === null ) {\n                timer = setTimeout(function() {\n                    func.apply(context, args);\n                    timer = null;\n                }, delay);\n            }\n        };\n    }\n\n    // Check for browser CSS support and cache the result for subsequent calls.\n    var checkStyleSupport = (function() {\n        var support = {};\n        return function(prop) {\n            if ( support[prop] !== undefined ) { return support[prop]; }\n\n            var div = document.createElement('div'),\n                style = div.style,\n                ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n                prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"],\n                props = (prop + ' ' + (prefixes).join(ucProp + ' ') + ucProp).split(' ');\n\n            for (var i in props) {\n                if ( props[i] in style ) { return support[prop] = props[i]; }\n            }\n\n            return support[prop] = false;\n        };\n    }());\n\n    var svgNS = 'http://www.w3.org/2000/svg',\n        svgSupport = (function() {\n            var support;\n            return function() {\n                if ( support !== undefined ) { return support; }\n                var div = document.createElement('div');\n                div.innerHTML = '<svg/>';\n                support = ( div.firstChild && div.firstChild.namespaceURI === svgNS );\n                return support;\n            };\n        }());\n\n    var $window = $(window),\n\n        transformSupport = checkStyleSupport('transform'),\n\n        defaults = {\n            itemContainer: 'ul',\n            // [string|object]\n            // Selector for the container of the flippin' items.\n\n            itemSelector: 'li',\n            // [string|object]\n            // Selector for children of `itemContainer` to flip\n\n            start: 'center',\n            // ['center'|number]\n            // Zero based index of the starting item, or use 'center' to start in the middle\n\n            fadeIn: 400,\n            // [milliseconds]\n            // Speed of the fade in animation after items have been setup\n\n            loop: false,\n            // [true|false]\n            // Loop around when the start or end is reached\n\n            autoplay: false,\n            // [false|milliseconds]\n            // If a positive number, Flipster will automatically advance to next item after that number of milliseconds\n\n            pauseOnHover: true,\n            // [true|false]\n            // If true, autoplay advancement will pause when Flipster is hovered\n\n            style: 'coverflow',\n            // [coverflow|carousel|flat|...]\n            // Adds a class (e.g. flipster--coverflow) to the flipster element to switch between display styles\n            // Create your own theme in CSS and use this setting to have Flipster add the custom class\n\n            spacing: -0.6,\n            // [number]\n            // Space between items relative to each item's width. 0 for no spacing, negative values to overlap\n\n            click: true,\n            // [true|false]\n            // Clicking an item switches to that item\n\n            keyboard: true,\n            // [true|false]\n            // Enable left/right arrow navigation\n\n            scrollwheel: true,\n            // [true|false]\n            // Enable mousewheel/trackpad navigation; up/left = previous, down/right = next\n\n            touch: true,\n            // [true|false]\n            // Enable swipe navigation for touch devices\n\n            nav: false,\n            // [true|false|'before'|'after']\n            // If not false, Flipster will build an unordered list of the items\n            // Values true or 'before' will insert the navigation before the items, 'after' will append the navigation after the items\n\n            buttons: false,\n            // [true|false|'custom']\n            // If true, Flipster will insert Previous / Next buttons with SVG arrows\n            // If 'custom', Flipster will not insert the arrows and will instead use the values of `buttonPrev` and `buttonNext`\n\n            buttonPrev: 'Previous',\n            // [text|html]\n            // Changes the text for the Previous button\n\n            buttonNext: 'Next',\n            // [text|html]\n            // Changes the text for the Next button\n\n            onItemSwitch: false\n            // [function]\n            // Callback function when items are switched\n            // Arguments received: [currentItem, previousItem]\n        },\n\n        classes = {\n            main: 'flipster',\n            active: 'flipster--active',\n            container: 'flipster__container',\n\n            nav: 'flipster__nav',\n            navChild: 'flipster__nav__child',\n            navItem: 'flipster__nav__item',\n            navLink: 'flipster__nav__link',\n            navCurrent: 'flipster__nav__item--current',\n            navCategory: 'flipster__nav__item--category',\n            navCategoryLink: 'flipster__nav__link--category',\n\n            button: 'flipster__button',\n            buttonPrev: 'flipster__button--prev',\n            buttonNext: 'flipster__button--next',\n\n            item: 'flipster__item',\n            itemCurrent: 'flipster__item--current',\n            itemPast: 'flipster__item--past',\n            itemFuture: 'flipster__item--future',\n            itemContent: 'flipster__item__content'\n        },\n\n        classRemover = new RegExp('\\\\b(' + classes.itemCurrent + '|' + classes.itemPast + '|' + classes.itemFuture + ')(.*?)(\\\\s|$)', 'g'),\n        whiteSpaceRemover = new RegExp('\\\\s\\\\s+', 'g');\n\n    $.fn.flipster = function(options) {\n        var isMethodCall = (typeof options === 'string' ? true : false);\n\n        if ( isMethodCall ) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            return this.each(function() {\n                var methods = $(this).data('methods');\n                if ( methods[options] ) {\n                    return methods[options].apply(this, args);\n                } else {\n                    return this;\n                }\n            });\n        }\n\n        var settings = $.extend({}, defaults, options);\n\n        return this.each(function() {\n\n            var self = $(this),\n                methods,\n\n                _container,\n                _containerWidth,\n                _resizeInterval,\n\n                _items,\n                _itemOffsets = [],\n                _currentItem,\n                _currentIndex = 0,\n\n                _nav,\n                _navItems,\n                _navLinks,\n\n                _playing = false,\n                _startDrag = false;\n\n            function buildButtonContent(dir) {\n                var text = ( dir === 'next' ? settings.buttonNext : settings.buttonPrev );\n\n                if ( settings.buttons === 'custom' || !svgSupport ) { return text; }\n\n                return '<svg viewBox=\"0 0 13 20\" xmlns=\"' + svgNS + '\" aria-labelledby=\"title\"><title>' + text + '</title><polyline points=\"10,3 3,10 10,17\"' + (dir === 'next' ? ' transform=\"rotate(180 6.5,10)\"' : '') + '/></svg>';\n            }\n\n            function buildButton(dir) {\n                dir = dir || 'next';\n\n                return $('<button class=\"' + classes.button + ' ' + ( dir === 'next' ? classes.buttonNext : classes.buttonPrev ) + '\" role=\"button\" />')\n                    .html(buildButtonContent(dir))\n                    .on('click', function(e) {\n                        jump(dir);\n                        e.preventDefault();\n                    });\n\n            }\n\n            function buildButtons() {\n                if ( settings.buttons && _items.length > 1 ) {\n                    self.find('.' + classes.button).remove();\n                    self.append(buildButton('prev'), buildButton('next'));\n                }\n            }\n\n            function buildNav() {\n                var navCategories = {};\n\n                if ( !settings.nav || _items.length <= 1 ) { return; }\n\n                if ( _nav ) { _nav.remove(); }\n\n                _nav = $('<ul class=\"' + classes.nav + '\" role=\"navigation\" />');\n                _navLinks = $('');\n\n                _items.each(function(i) {\n                    var item = $(this),\n                        category = item.data('flip-category'),\n                        itemTitle = item.data('flip-title') || item.attr('title') || i,\n                        navLink = $('<a href=\"#\" class=\"' + classes.navLink + '\">' + itemTitle + '</a>')\n                        .data('index', i);\n\n                    _navLinks = _navLinks.add(navLink);\n\n                    if ( category ) {\n\n                        if ( !navCategories[category] ) {\n\n                            var categoryItem = $('<li class=\"' + classes.navItem + ' ' + classes.navCategory + '\">');\n                            var categoryLink = $('<a href=\"#\" class=\"' + classes.navLink + ' ' + classes.navCategoryLink + '\" data-flip-category=\"' + category + '\">' + category + '</a>')\n                                    .data('category', category)\n                                    .data('index', i);\n\n                            navCategories[category] = $('<ul class=\"' + classes.navChild + '\" />');\n\n                            _navLinks = _navLinks.add(categoryLink);\n\n                            categoryItem\n                                .append(categoryLink, navCategories[category])\n                                .appendTo(_nav);\n                        }\n\n                        navCategories[category].append(navLink);\n                    } else {\n                        _nav.append(navLink);\n                    }\n\n                    navLink.wrap('<li class=\"' + classes.navItem + '\">');\n\n                });\n\n                _nav.on('click', 'a', function(e) {\n                    var index = $(this).data('index');\n                    if ( index >= 0 ) {\n                        jump(index);\n                        e.preventDefault();\n                    }\n                });\n\n                if ( settings.nav === 'after' ) { self.append(_nav); }\n                else { self.prepend(_nav); }\n\n                _navItems = _nav.find('.' + classes.navItem);\n            }\n\n            function updateNav() {\n                if ( settings.nav ) {\n\n                    var category = _currentItem.data('flip-category');\n\n                    _navItems.removeClass(classes.navCurrent);\n\n                    _navLinks\n                        .filter(function() {\n                            return ($(this).data('index') === _currentIndex || (category && $(this).data('category') === category));\n                        })\n                        .parent()\n                        .addClass(classes.navCurrent);\n\n                }\n            }\n\n            function noTransition() {\n                self.css('transition', 'none');\n                _container.css('transition', 'none');\n                _items.css('transition', 'none');\n            }\n\n            function resetTransition() {\n                self.css('transition', '');\n                _container.css('transition', '');\n                _items.css('transition', '');\n            }\n\n            function calculateBiggestItemHeight() {\n                var biggestHeight = 0,\n                    itemHeight;\n\n                _items.each(function() {\n                    itemHeight = $(this).height();\n                    if ( itemHeight > biggestHeight ) { biggestHeight = itemHeight; }\n                });\n                return biggestHeight;\n            }\n\n            function resize(skipTransition) {\n                if ( skipTransition ) { noTransition(); }\n\n                _containerWidth = _container.width();\n                _container.height(calculateBiggestItemHeight());\n\n                // Prevent maximum callstack error. #79 #74\n                if ( !_containerWidth ) {\n                    _resizeInterval = _resizeInterval || setInterval(function(){ resize(skipTransition); },500);\n                    return;\n                } else if ( _resizeInterval ) {\n                    clearInterval(_resizeInterval);\n                    _resizeInterval = false;\n                }\n\n                _items.each(function(i) {\n                    var item = $(this),\n                        width,\n                        left;\n\n                    item.attr('class', function(i, c) {\n                        return c && c.replace(classRemover, '').replace(whiteSpaceRemover, ' ');\n                    });\n\n                    width = item.outerWidth();\n\n                    if ( settings.spacing !== 0 ) {\n                        item.css('margin-right', ( width * settings.spacing ) + 'px');\n                    }\n\n                    left = item.position().left;\n                    _itemOffsets[i] = -1 * ((left + (width / 2)) - (_containerWidth / 2));\n\n                    if ( i === _items.length - 1 ) {\n                        center();\n                        if ( skipTransition ) { setTimeout(resetTransition, 1); }\n                    }\n                });\n            }\n\n            function center() {\n                var total = _items.length;\n                var item;\n                var newClass;\n                var zIndex;\n\n                _items.each(function (i) {\n                    item = $(this);\n                    newClass = ' ';\n\n                    if (i === _currentIndex)\n                    {\n                        newClass += classes.itemCurrent;\n                        zIndex = (total + 1);\n                    }\n                    else if (i < _currentIndex)\n                    {\n                        newClass += classes.itemPast + ' ' +\n                            classes.itemPast + '-' + (_currentIndex - i);\n                        zIndex = total - (_currentIndex - i);\n                    }\n                    else\n                    {\n                        newClass += classes.itemFuture + ' ' +\n                            classes.itemFuture + '-' + (i - _currentIndex);\n                        \n                        zIndex = total -  (i - _currentIndex);\n                    }\n\n                    item.css('z-index', zIndex )\n                      .attr('class',function(i, c){\n                        return c && c.replace(classRemover, '').replace(whiteSpaceRemover,' ') + newClass;\n                      });\n                });\n\n                if ( _currentIndex >= 0 ) {\n                    if ( !_containerWidth || _itemOffsets[_currentIndex] === undefined ) { resize(true); }\n\n                    if ( transformSupport ) {\n                        _container.css('transform', 'translateX(' + _itemOffsets[_currentIndex] + 'px)');\n                    } else {\n                        _container.css({ 'left': _itemOffsets[_currentIndex] + 'px' });\n                    }\n                }\n\n                updateNav();\n            }\n\n            function jump(to) {\n                var _previous = _currentIndex;\n\n                if ( _items.length <= 1 ) { return; }\n\n                if (to === 'prev') {\n                    if ( _currentIndex > 0 ) { _currentIndex--; }\n                    else if ( settings.loop ) { _currentIndex = _items.length - 1; }\n                } else if (to === 'next') {\n                    if ( _currentIndex < _items.length - 1 ) { _currentIndex++; }\n                    else if ( settings.loop ) { _currentIndex = 0; }\n                } else if (typeof to === 'number') {\n                    _currentIndex = to;\n                } else if ( to !== undefined ) {\n                    // if object is sent, get its index\n                    _currentIndex = _items.index(to);\n                    if (settings.loop && _previous != _currentIndex) {\n                        if (_previous == (_items.length - 1) && _currentIndex != (_items.length - 2)) _currentIndex = 0;\n                        if (_previous == 0 && _currentIndex != 1) _currentIndex = (_items.length - 1);\n                    }\n                }\n\n                _currentItem = _items.eq(_currentIndex);\n\n                if ( _currentIndex !== _previous && settings.onItemSwitch ) {\n                    settings.onItemSwitch.call(self, _items[_currentIndex], _items[_previous]);\n                }\n\n                center();\n\n                return self;\n            }\n\n            function play(interval) {\n                settings.autoplay = interval || settings.autoplay;\n\n                clearInterval(_playing);\n\n                _playing = setInterval(function() {\n                    var prev = _currentIndex;\n                    jump('next');\n                    if ( prev === _currentIndex && !settings.loop ) { clearInterval(_playing); }\n                }, settings.autoplay);\n\n                return self;\n            }\n\n            function stop(){\n                clearInterval(_playing);\n                _playing = 0;\n                return self;\n            }\n\n            function pause(forced) {\n                stop();\n                if ( settings.autoplay && forced ) { _playing = -1; }\n                return self;\n            }\n\n            function show() {\n                resize(true);\n                self.hide()\n                    .css('visibility', '')\n                    .addClass(classes.active)\n                    .fadeIn(settings.fadeIn);\n            }\n\n            function index() {\n\n                _container = self.find(settings.itemContainer).addClass(classes.container);\n\n                _items = _container.find(settings.itemSelector);\n\n                if ( _items.length <= 1 ) { return; }\n\n                _items\n                    .addClass(classes.item)\n                    // Wrap inner content\n                    .each(function() {\n                        var item = $(this);\n                        if ( !item.children('.' + classes.itemContent ).length) {\n                            item.wrapInner('<div class=\"' + classes.itemContent + '\" />');\n                        }\n                    });\n\n                // Navigate directly to an item by clicking\n                if ( settings.click ) {\n                    _items.on('click.flipster touchend.flipster', function (e) {\n                        if ( !_startDrag ) {\n                            if ( !$(this).hasClass(classes.itemCurrent) ) { e.preventDefault(); }\n                            jump(this);\n                        }\n                    });\n                }\n\n                // Insert navigation if enabled.\n                buildButtons();\n                buildNav();\n\n                if ( _currentIndex >= 0 ) { jump(_currentIndex); }\n\n                return self;\n            }\n\n            function keyboardEvents(elem) {\n                if ( settings.keyboard ) {\n                    elem[0].tabIndex = 0;\n                    elem.on('keydown.flipster', throttle(function(e) {\n                        var code = e.which;\n                        if ( code === 37 || code === 39 ) {\n                            jump( code === 37 ? 'prev' : 'next' );\n                            e.preventDefault();\n                        }\n                    }, 250, true));\n                }\n            }\n\n            function wheelEvents(elem) {\n                if ( settings.scrollwheel ) {\n                    var _wheelInside = false,\n                        _actionThrottle = 0,\n                        _throttleTimeout = 0,\n                        _delta = 0,\n                        _dir, _lastDir,\n                        _isMozilla = /mozilla/.test(navigator.userAgent.toLowerCase()) && !/webkit/.test(navigator.userAgent.toLowerCase());\n\n                    elem\n                        .on('mousewheel.flipster wheel.flipster', function() { _wheelInside = true; })\n                        .on('mousewheel.flipster wheel.flipster', throttle(function(e) {\n\n                            // Reset after a period without scrolling.\n                            clearTimeout(_throttleTimeout);\n                            _throttleTimeout = setTimeout(function() {\n                                _actionThrottle = 0;\n                                _delta = 0;\n                            }, 300);\n\n                            e = e.originalEvent;\n\n                            // Add to delta (+=) so that continuous small events can still get past the speed limit, and quick direction reversals get cancelled out\n                            _delta += (e.wheelDelta || (e.deltaY + e.deltaX) * -1); // Invert numbers for Firefox\n\n                            // Don't trigger unless the scroll is decent speed.\n                            // There's need to check if _isMozilla because of different working delta in Firefox (in FF scroll delta is less than 25 or more than -25)\n                            if ( Math.abs(_delta) < 25 && ! _isMozilla) { return; }\n\n                            _actionThrottle++;\n\n                            _dir = (_delta > 0 ? 'prev' : 'next');\n\n                            // Reset throttle if direction changed.\n                            if ( _lastDir !== _dir ) { _actionThrottle = 0; }\n                            _lastDir = _dir;\n\n                            // Regular scroll wheels trigger less events, so they don't need to be throttled. Trackpads trigger many events (inertia), so only trigger jump every three times to slow things down.\n                            if ( _actionThrottle < 6 || _actionThrottle % 3 === 0 ) { jump(_dir); }\n\n                            _delta = 0;\n\n                        }, 50));\n\n                    // Disable mousewheel on window if event began in elem.\n                    $window.on('mousewheel.flipster wheel.flipster', function(e) {\n                        if ( _wheelInside ) {\n                            e.preventDefault();\n                            _wheelInside = false;\n                        }\n                    });\n                }\n            }\n\n            function touchEvents(elem) {\n                if (settings.touch) {\n                    var _startDragX, _startDragY, x, y, offsetY, offsetX;\n\n                    elem.on({\n                        'touchstart.flipster': function (e) {\n                            // e.preventDefault();\n                            e = e.originalEvent;\n                            _startDragX = (e.touches ? e.touches[0].clientX : e.clientX);\n                            _startDragY = (e.touches ? e.touches[0].clientY : e.clientY);\n                        },\n\n                        'touchmove.flipster': function (e) {\n                            // e.preventDefault();\n                            e = e.originalEvent;\n                            x = (e.touches ? e.touches[0].clientX : e.clientX);\n                            y = (e.touches ? e.touches[0].clientY : e.clientY);\n                            offsetX = x - _startDragX;\n                            offsetY = y - _startDragY;\n                            if (Math.abs(offsetX) > 30 && Math.abs(offsetY) < 100) {\n                                e.preventDefault();\n                            }\n                        },\n\n                        'touchend.flipster touchcancel.flipster ': function () {\n                            offsetX = x - _startDragX;\n                            offsetY = y - _startDragY;\n                            if (Math.abs(offsetX) > 30 && Math.abs(offsetY) < 100) {\n                                if (offsetX > 0) {\n                                    jump('prev');\n                                }\n                                else {\n                                    jump('next');\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n\n            function init() {\n\n                var style;\n\n                self.css('visibility', 'hidden');\n\n                index();\n\n                if ( _items.length <= 1 ) {\n                    self.css('visibility', '');\n                    return;\n                }\n\n                style = (settings.style ? 'flipster--' + settings.style.split(' ').join(' flipster--') : false);\n\n                self.addClass([\n                    classes.main,\n                    (transformSupport ? 'flipster--transform' : ' flipster--no-transform'),\n                    style, // 'flipster--'+settings.style : '' ),\n                    (settings.click ? 'flipster--click' : '')\n                ].join(' '));\n\n                // Set the starting item\n                if ( settings.start ) {\n                    // Find the middle item if start = center\n                    _currentIndex = ( settings.start === 'center' ? Math.floor(_items.length / 2) : settings.start );\n                }\n\n                jump(_currentIndex);\n\n                var images = self.find('img');\n\n                if ( images.length ) {\n                    var imagesLoaded = 0;\n\n                    // Resize after all images have loaded.\n                    images.on('load', function() {\n                        imagesLoaded++;\n                        if ( imagesLoaded >= images.length ) { show(); }\n                    });\n\n                    // Fallback to show Flipster while images load in case it takes a while.\n                    setTimeout(show, 750);\n                } else {\n                    show();\n                }\n\n                // Attach event bindings.\n                $window.on('resize.flipster', throttle(resize, 400));\n\n                if ( settings.autoplay ) { play(); }\n\n                if ( settings.pauseOnHover ) {\n                    _container\n                        .on('mouseenter.flipster', function(){\n                            if (_playing) { pause(true); }\n                            else { stop() }\n                        })\n                        .on('mouseleave.flipster', function() {\n                            if ( _playing === -1 ) { play(); }\n                        });\n                }\n\n                keyboardEvents(self);\n                wheelEvents(_container);\n                touchEvents(_container);\n            }\n\n            // public methods\n            methods = {\n                jump: jump,\n                next: function() { return jump('next'); },\n                prev: function() { return jump('prev'); },\n                play: play,\n                stop: stop,\n                pause: pause,\n                index: index\n            };\n            self.data('methods', methods);\n\n            // Initialize if flipster is not already active.\n            if ( !self.hasClass(classes.active) ) { init(); }\n        });\n    };\n\n    return $;\n});\n\ndefine('skylark-flipster/main',[\r\n\t\"./flipster\"\r\n],function(flipster) {\r\n\treturn flipster;\r\n});\ndefine('skylark-flipster', ['skylark-flipster/main'], function (main) { return main; });\n\n"]}